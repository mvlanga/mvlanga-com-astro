---
import { Image } from "astro:assets";
import { getCollection } from "astro:content";
import { OtherBlogPosts } from "@/components/blog/OtherBlogPosts";
import { Button } from "@/components/common/Button";
import { ColoredBackground } from "@/components/common/ColoredBackground";
import Ellipsis from "@/components/common/Ellipsis.astro";
import { PlayfulDivider } from "@/components/common/PlayfulDivider";
import { PortraitImage } from "@/components/common/PortraitImage";
import Skeleton from "@/components/common/Skeleton.astro";
import Layout from "@/layouts/layout.astro";
import {
	sortBlogPosts,
	sortExperience,
	sortProjects,
} from "@/utils/sortCollection";
const experience = sortExperience(await getCollection("experience"));
const projects = sortProjects(await getCollection("projects"));

const isProduction = import.meta.env.PROD;

const blogPosts = sortBlogPosts(
	await getCollection("blogPosts", ({ data }) => {
		return isProduction
			? data.draft === undefined || data.draft === false
			: true;
	}),
);
---

<Layout>
    <title slot="head">Moriz von Langa — Frontend Developer</title>
    <meta slot="head" name="description"
          content="I'm a frontend developer who focuses on building solutions that really solve user problems. All while keeping an eye on system architecture and appropriate design."/>

    <section class="container scroll-mt-96" id="home">
        <h1 class="mb-10 text-6xl font-bold leading-snug">
            Hi, I’m Moriz.
        </h1>
        <p class="max-w-prose text-3xl font-light">
            Frontend Developer based in Leipzig. On daily routine, I try to ask a
            lot of questions with the goal of really build solutions that truly solve the users
            problems.
        </p>
    </section>

    <section class="relative scroll-mt-16" id="about">
        <ColoredBackground client:idle className="-z-20 -bottom-32 -top-32"/>
        <div class="container grid gap-16">
            <h2 class="text-5xl">About</h2>
            <PlayfulDivider client:only="react">
                <hr slot="fallback" class="border-neutral-800"/>
            </PlayfulDivider>
            <div class="grid md:grid-cols-6 gap-16">
                <div class="md:col-span-2">
                    <p class="text-xl max-w-prose">
                        I love exploring ideas with curiosity and an open mind, all while focusing on software
                        architecture.
                    </p>
                </div>
                <PortraitImage client:idle/>
            </div>
            <h2 class="text-4xl">
                The way I work
                <Ellipsis/>
            </h2>
            <div class="grid md:grid-cols-3 gap-16">
                <div class="flex flex-col gap-6">
                    <p class="text-neutral-400">01</p>
                    <hr class="border-neutral-800"/>
                    <p class="text-2xl">Learning & Problem Solving</p>
                    <p class="text-neutral-400">
                        With my ability to quickly grasp new systems and their underlying structure, I thrive in
                        environments where I can dive deep and make sense of complex challenges. I approach every
                        problem with a curious mindset, constantly questioning and seeking to understand the root
                        causes, not just the symptoms. This allows me to develop thoughtful and effective solutions.
                    </p>
                </div>
                <div class="flex flex-col gap-6">
                    <p class="text-neutral-400">02</p>
                    <hr class="border-neutral-800"/>
                    <p class="text-2xl">System Architecture</p>
                    <p class="text-neutral-400">
                        With a keen eye for how frontend and backend systems work together, I ensure my work is always
                        in sync with the bigger picture. I take pride in creating solutions that align seamlessly with
                        the overall architecture, ensuring efficiency and scalability.
                    </p>
                </div>
                <div class="flex flex-col gap-6">
                    <p class="text-neutral-400">03</p>
                    <hr class="border-neutral-800"/>
                    <p class="text-2xl">User-Centric Design</p>
                    <p class="text-neutral-400">
                        I’m passionate about understanding the user’s needs and challenges. I dig deep into their pain
                        points to craft solutions that truly make a difference. My focus is always on creating
                        intuitive, accessible experiences that enhance the user journey.
                    </p>
                </div>
            </div>
        </div>
    </section>

    <section class="grid gap-16 container scroll-mt-16" id="experience">
        <h2 class="text-5xl">Experience</h2>

        <PlayfulDivider client:only="react">
            <hr slot="fallback" class="border-neutral-800"/>
        </PlayfulDivider>

        <div class="flex flex-col gap-8">
            <div class="flex flex-col gap-8 z-0">
                {
                    experience.map(({
                                        data: {from, to, role, technologies, company, tasks},
                                    }, index) => (
                            <div
                                    class="grid gap-8 rounded-xl bg-neutral-900 p-8 md:p-16 lg:grid-cols-3 lg:gap-16"
                                    style={{zIndex: index * 20}}
                            >
                                <div class="flex flex-col gap-4 lg:col-span-1">
                                    <p class="text-neutral-400">
                                        {from}
                                        {" - "}
                                        {to}
                                    </p>
                                    <h3 class="text-3xl">{role}</h3>
                                    <p class="text-neutral-300 text-xl">{company.title}</p>
                                    <p class="text-neutral-400">{company.description}</p>
                                </div>
                                <hr class="border-neutral-800 lg:hidden"/>
                                <div class="flex max-w-prose flex-col gap-8 lg:col-span-2">
                                    <ul class="flex flex-col gap-4 text-neutral-400">
                                        {tasks.map((task) => (
                                                <li>{task}</li>
                                        ))}
                                    </ul>
                                    {technologies && (
                                            <div class="flex flex-wrap gap-2">
                                                {technologies.map((tech) => (
                                                        <span class="rounded-full bg-neutral-800 px-5 py-2 text-neutral-400 text-sm">{tech}</span>
                                                ))}
                                            </div>
                                    )}
                                </div>
                            </div>
                    ))
                }
            </div>
            <div class="w-full text-end">
                <a href="/moriz-von-langa_resume.pdf" class="w-full md:w-auto" target="_blank"
                   data-umami-event="link-click" data-umami-event-url="/moriz-von-langa_resume.pdf">
                    <Button className="w-full md:w-auto" client:visible text="See full resume" level="primary"/>
                </a>
            </div>
        </div>
    </section>

    <section class="container scroll-mt-16 grid gap-16" id="projects">
        <h2 class="text-5xl">Projects</h2>

        <PlayfulDivider client:only="react">
            <hr slot="fallback" class="border-neutral-800"/>
        </PlayfulDivider>

        <div class="relative grid md:grid-cols-5 xl:grid-cols-2 gap-y-16 md:gap-y-0 gap-x-16">
            {
                projects.map(({id, data: {title, customer, cover, coverOnHover}}, index) => (
                        <div class="flex flex-col md:col-span-2 xl:col-span-1 justify-center md:order-none! md:py-16"
                             style=`order: ${index + 2}`>
                            <a href=`/${id}` class="flex flex-col gap-6">
                                <span class="text-neutral-400 text-xl">{customer}</span>
                                <h3 class="text-4xl">
                                    <span>{title}</span>
                                </h3>
                            </a>
                        </div>
                        <div class="md:sticky md:top-0 md:col-span-3 xl:col-span-1 flex items-center md:order-none! mt-16 md:mb-0 md:py-16"
                             style=`order: ${index + 1}`>
                            <a class="block relative overflow-hidden rounded-2xl w-full aspect-square md:aspect-auto md:max-h-[calc(100lvh-var(--spacing)*16*2)]"
                               href=`/${id}`>
                                <Image class="bg-neutral-900 w-full h-full object-cover" src={cover} alt={title}/>
                                <Image
                                        class="bg-neutral-900 absolute transition-all object-cover duration-500 opacity-0 inset-0 w-full h-full hover:opacity-100 hover:scale-110 z-10"
                                        src={coverOnHover}
                                        alt={title}/>
                            </a>
                        </div>
                ))
            }
        </div>
    </section>

    <section class="container grid gap-16" id="blogPosts">
        <div class="grid gap-8">
            <h2 class="text-5xl">Latest blog posts</h2>

            <p class="text-neutral-400 max-w-prose">
                Just a few notes and reminders for myself, usually when I've found a solution to something I was
                struggling with, discovered a good solution to a channeling problem, or tried something new.
            </p>
        </div>

        <PlayfulDivider client:only="react">
            <hr slot="fallback" class="border-neutral-800"/>
        </PlayfulDivider>

        <OtherBlogPosts client:only="react" blogPosts={blogPosts}>
            <div slot="fallback" class="overflow-hidden">
                <div class="-ml-8 flex touch-pan-y">
                    {blogPosts.map(
                        ({
                             id,
                             data: {title, description, tags, createdAt},
                         }) => (
                                <div
                                        class="transform-3d-[0_0_0] min-w-0 flex-[0_0_75%] pl-8 md:flex-[0_0_40%] lg:flex-[0_0_45%]"
                                >
                                    <a
                                            class="group flex h-full w-full flex-col justify-between gap-8 rounded-4xl bg-neutral-900 p-12 transition-colors hover:bg-neutral-800"
                                            href={`/blog/${id}`}
                                    >
                                        <div class="flex flex-col items-start gap-6">
                                            <h3 class="text-lg">{title}</h3>
                                            <p class="text-neutral-300">{description}</p>
                                        </div>

                                        <hr class="border-neutral-800 transition-colors group-hover:border-neutral-700"/>

                                        <div class="flex flex-wrap justify-between gap-4 text-neutral-400 text-xs">
                                            <p>{tags.map((tag) => `#${tag}`).join(", ")}</p>

                                            <div class="flex flex-wrap gap-4">
                                                <Skeleton className="w-[8ch]"/>

                                                <p>{createdAt.toLocaleDateString("en-US")}</p>
                                            </div>
                                        </div>
                                    </a>
                                </div>
                        ),
                    )}
                </div>
            </div>
        </OtherBlogPosts>

        <div class="w-full text-end">
            <a href="/blog" class="w-full md:w-auto">
                <Button className="w-full md:w-auto" client:visible text="See all blog posts" level="primary"/>
            </a>
        </div>
    </section>
</Layout>
