---
import { Button } from "@/components/common/Button";
import Layout from "@/layouts/layout.astro";
import { fetchMastodonStatuses } from "@/utils/fetchMastodonStatuses";

type MediaAttachment = {
	url: string;
	preview_url: string;
	description: string;
};

type Tags = {
	name: string;
	url: string;
};

type Post = {
	content: string;
	created_at: string;
	tags: Tags[];
	media_attachments: MediaAttachment[];
};

const posts = await fetchMastodonStatuses<Post[]>(
	import.meta.env.MASTODON_USER_ID,
);

const postsGroupedByMonth = Object.groupBy(posts, ({ created_at }) =>
	new Date(created_at).toLocaleString("en-US", { month: "long" }),
);

const availableTags = [
	...new Set(posts.flatMap((post) => post.tags.map(({ name }) => name))),
];
---

<title slot="head">Notes â€” Moriz von Langa</title>
<meta slot="head" name="description" content="A few notes and reminders, usually when I've found a solution to something I was struggling with, discovered the ideal solution to a problem, or tried something new with coffee or my plants."/>

<Layout className="container gap-32">
    <section class="grid gap-8">
        <h1 class="text-4xl font-bold leading-snug">
            Notes
        </h1>
        <p class="max-w-prose text-lg text-neutral-400">
            A few notes and reminders for myself, usually when I've found a solution to something I was struggling with, discovered the ideal solution to a problem, or tried something new with coffee or my plants. It's great to have a place to go back to.
        </p>
        <div class="flex flex-wrap gap-2">
            <Button client:visible text="All" />
            {availableTags.map((tag) => (<Button client:visible text={tag} level="secondary" />))}
        </div>
    </section>
    
    {
        (Object.entries(postsGroupedByMonth)).map(([monthName, statuses]) => (
            <div class="grid gap-8">
                <p class="text-2xl">{monthName}</p>
                <div class="grid sm:grid-cols-2 xl:grid-cols-3 gap-8">
                    {statuses?.filter(v => v).map(({ content, created_at, media_attachments, tags }) => (
                            <div class="bg-neutral-900 flex flex-col gap-8 justify-between w-full col-span-1 rounded-4xl p-12">
                                <div class="flex flex-col gap-8">
                                    <div class="flex flex-col gap-4">
                                        <Fragment set:html={content} />
                                    </div>
                                    {media_attachments.map(({ preview_url, url, description }) => (
                                            <img class="rounded-2xl max-h-[60vh]" src={preview_url} alt={description} loading="lazy" />
                                    ))}
                                </div>
                                <div class="flex gap-2 flex-wrap justify-between text-neutral-400 text-xs">
                                    {tags.map(({name}) => (`#${name}`)).join(", ")}
                                    <p>{new Date(created_at).toLocaleString()}</p>
                                </div>
                            </div>
                    ))}
                </div>
            </div>
        ))
    }
</Layout>;
