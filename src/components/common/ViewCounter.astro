---
export const prerender = false;

import { actions } from "astro:actions"; // Import Astro actions for calling server-side logic
import { PageViews, db, sql } from "astro:db";

interface Props {
	id: string;
	increase: boolean;
}

const { id, increase } = Astro.props;

const getCount = async (): Promise<undefined | number> => {
	if (increase) {
		const dbResponse = await db
			.insert(PageViews)
			.values({
				id,
			})
			.onConflictDoUpdate({
				target: PageViews.id,
				set: { count: sql`count + 1` },
			})
			.returning();

		return dbResponse[0]?.count;
	}

	const { data } = await Astro.callAction(actions.pageViews.get, id);

	return data?.[0]?.count;
};

const dbResponse = await db
	.insert(PageViews)
	.values({
		id,
	})
	.onConflictDoUpdate({
		target: PageViews.id,
		set: { count: sql`count + 1` },
	})
	.returning();

const count = await getCount();

if (count === undefined) {
	return;
}
---
<p class="inline-block">{count.toLocaleString()} views</p>