---
import { clsx } from "clsx";
import { type ImageMetadata } from "astro";

interface Props {
	items: (
		| {
				type: "video";
				src: string;
				poster: ImageMetadata;
				description?: string;
		  }
		| {
				type: "image";
				image: ImageMetadata;
				alt: string;
				description?: string;
		  }
	)[];
	reverseOffset?: boolean;
}

const { items, reverseOffset = false } = Astro.props;
---

<div class="grid lg:grid-cols-6 gap-x-16 xl:gap-x-32 gap-y-32">
    {items.map((props, index) =>
        props.type === "image" ? (
                <div class="lg:col-span-3 h-fit grid gap-4 text-center">
                    <img class={clsx("rounded-4xl", (reverseOffset ? index % 2 === 0 : index % 2) && "lg:mt-64")}
                     src={props.image.src} width={props.image.width} height={props.image.height} alt={props.alt}/>
                    {props.description && <p class="text-neutral-300">{props.description}</p>}
                </div>
        ) : (
                <div class="lg:col-span-3 h-fit grid gap-4 text-center">
                    <video class={clsx("rounded-4xl", (reverseOffset ? index % 2 === 0 : index % 2) && "lg:mt-64")}
                       poster={props.poster.src}
                       src={props.src} muted controls playsInline/>
                    {props.description && <p class="text-neutral-300">{props.description}</p>}
                </div>
        ),
    )}
</div>