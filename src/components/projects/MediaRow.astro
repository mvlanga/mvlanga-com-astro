---
import {
	VideoPlayer,
	type VideoPlayerProps,
} from "@/components/common/VideoPlayer";
import { type ImageMetadata } from "astro";
import { clsx } from "clsx";

interface Props {
	items: (
		| ({
				type: "video";
		  } & VideoPlayerProps)
		| {
				type: "image";
				image: ImageMetadata;
				alt: string;
				description?: string;
		  }
	)[];
	reverseOffset?: boolean;
}

const { items, reverseOffset = false } = Astro.props;
---

<div class="grid md:grid-cols-6 gap-16 md:gap-32">
    {items.map((props, index) =>
        props.type === "image" ? (
                <figure class="md:col-span-3 h-fit grid gap-4 text-center">
                    <img class={clsx("bg-neutral-900 light:bg-neutral-200 rounded-4xl", (reverseOffset ? index % 2 === 0 : index % 2) && "md:mt-32")}
                         src={props.image.src} width={props.image.width} height={props.image.height} alt={props.alt}
                         loading="lazy"/>

                    {props.description && <figcaption class="text-neutral-300 light:text-neutral-800">{props.description}</figcaption>}
                </figure>
        ) : (
                <div class={clsx("md:col-span-3 h-fit",(reverseOffset ? index % 2 === 0 : index % 2) && "md:mt-64")}>
                    <VideoPlayer client:visible muted={props.muted} src={props.src} poster={props.poster} alt={props.alt} description={props.description} />
                </div>
        ),
    )}
</div>